---
title: "Run initial two-way ANOVAS"
subtitle: "Quasi Dark-Adapted Rapid Light Curve (RLC) Analysis"
author: "Sarah Tanja"
date: "`r format(Sys.time(), '%d %B, %Y')`"  
format:
  html:
    df-print: paged
    toc: true
    toc-location: right
    smooth-scroll: true
    link-external-icon: true
    link-external-newwindow: true
    code-fold: false
    code-tools: true
    code-copy: true
    highlight-style: breeze
    code-overflow: wrap
    theme: minty
editor: 
  markdown: 
    wrap: 72
---

# Overview

Here we take the cleaned up data from the quasi-dark adapted rapid light
curves and the dark-adapted quantum yield measurements and run some
initial anovas between treatments and visualize the data.

Repeated measures ANOVA resources: -
https://courses.washington.edu/psy524a/\_book/repeated-measures-anova.html#repeated-measures-with-more-than-two-levels

Generalized Linear Mixed Models (GLMM) resources:

# Install and load packages

```{r}
# Install packages
if ("tidyverse" %in% rownames(installed.packages()) == 'FALSE') install.packages('tidyverse')
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
if ("ggplot2" %in% rownames(installed.packages()) == 'FALSE') install.packages('ggplot2')
if ("geomtextpath" %in% rownames(installed.packages()) == 'FALSE') install.packages('geomtextpath')
if ("hrbrthemes" %in% rownames(installed.packages()) == 'FALSE') install.packages('hrbrthemes')
if ("lme4" %in% rownames(installed.packages()) == 'FALSE') install.packages('lme4')

remotes::install_github("AllanCameron/geomtextpath", quiet = TRUE)

# Load packages
library(dplyr)
library(tidyverse)
library(ggplot2)
library(geomtextpath)
library(hrbrthemes)
library(lme4)
```

# Pull in RLC regression variables data

reg stands for regression from Jasby & Platt 1979

```{r}
reg_day1 <- read_csv("../output/reg_day1.csv")
reg_day2 <- read_csv("../output/reg_day2.csv")
reg_day3 <- read_csv("../output/reg_day3.csv")
reg_day4 <- read_csv("../output/reg_day4.csv")
```

# Pull in Fv/Fm data

```{r}
fvfm_day1 <- read_csv("../output/fvfm_day1.csv")
fvfm_day2 <- read_csv("../output/fvfm_day2.csv")
fvfm_day3 <- read_csv("../output/fvfm_day3.csv")
fvfm_day4 <- read_csv("../output/fvfm_day4.csv")
```

# Fv/Fm

## Data peek

### Day 1

```{r}
FvFm_1 <- ggplot(fvfm_day1) +
  aes(x = treatment, y = FvFm, fill= leachate) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Day 1 of Exposure: Photosynthetic efficiency (Fv/Fm)",
    x = " ",
    y = "Photosynthetic efficiency (Fv/Fm)"
  )  
FvFm_1
```

### Day 2

```{r}
FvFm_2 <- ggplot(fvfm_day2) +
  aes(x = treatment, y = FvFm, fill= leachate) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Day 2 of Exposure: Photosynthetic efficiency (Fv/Fm)",
    x = " ",
    y = "Photosynthetic efficiency (Fv/Fm)"
  )  
FvFm_2
```

### Day 3

```{r}
FvFm_3 <- ggplot(fvfm_day3) +
  aes(x = treatment, y = FvFm, fill= leachate) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Day 3 of Exposure: Photosynthetic efficiency (Fv/Fm)",
    x = " ",
    y = "Photosynthetic efficiency (Fv/Fm)"
  )  
FvFm_3
```

### Day 4

```{r}
FvFm_4 <- ggplot(fvfm_day4) +
  aes(x = treatment, y = FvFm, fill= leachate) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Day 4 of Exposure: Photosynthetic efficiency (Fv/Fm)",
    x = " ",
    y = "Photosynthetic efficiency (Fv/Fm)"
  )  
FvFm_4
```

### Across Days

Remove the YII column from day 1...

```{r}
fvfm_day1 <- fvfm_day1 %>% select(!YII)
```

Bind rows with `rbind` so that data is in long format See
[here](https://courses.washington.edu/psy524a/_book/repeated-measures-anova.html#repeated-measures-with-more-than-two-levels:~:text=This%20data%20is%20stored%20in%20%E2%80%98long%20format%E2%80%99%2C%20where%20each%20row%20in%20the%20table%20corresponds%20to%20a%20different%20observation)
about long format data for lmer

```{r}
fvfm_alldays <- do.call(rbind, list(fvfm_day1, fvfm_day2, fvfm_day3, fvfm_day4))
```

```{r}
summary(fvfm_alldays)
```

```{r}
ggplot(fvfm_alldays, aes(x = days_of_exposure, y = FvFm, color = treatment)) +
  geom_boxplot() +
  #geom_labelsmooth(aes(label = treatment), fill = "white",
  #              method = "lm", formula = y ~ x,
  #              size = 3, linewidth = 1, boxlinewidth = 0.4) +
  theme_bw()
```

```{r}
# Create the boxplot
ggplot(fvfm_alldays, aes(x = treatment, y = FvFm, fill = treatment)) +
  geom_boxplot() +
  facet_wrap(~ days_of_exposure) +
  theme_bw() +
  labs(
    title = "Photosynthetic efficiency (Fv/Fm) across Treatments and Days",
    x = "Treatment",
    y = "Photosynthetic efficiency (Fv/Fm)"
  )
```

```{r}
# Create the boxplot
fvfm_byday <- ggplot(fvfm_alldays, aes(x = treatment, y = FvFm, fill = treatment)) +
  geom_boxplot() +
  facet_grid(. ~ days_of_exposure) +
  theme_bw() +
  labs(
    title = "Photosynthetic efficiency (Fv/Fm) across Treatments and Days",
    x = "Treatment",
    y = "Photosynthetic efficiency (Fv/Fm)"
  )

fvfm_byday

# save the plot as a .png
ggsave("../output/fvfm_byday_plot.png", plot = fvfm_byday, width = 10, height = 6, dpi = 600)
```

```{r}

# Create a new column combining days_of_exposure and treatment
fvfm_alldays$day_treatment <- interaction(fvfm_alldays$days_of_exposure, fvfm_alldays$treatment)

# Create the boxplot
fvfm_combo <- ggplot(fvfm_alldays, aes(x = day_treatment, y = FvFm, fill = treatment)) +
  geom_boxplot() +
  theme_bw() +
  labs(
    title = "Photosynthetic efficiency (Fv/Fm) across Treatments and Days",
    x = "Days of Exposure and Treatment",
    y = "Photosynthetic efficiency (Fv/Fm)"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

fvfm_combo

# save the plot as a .png
ggsave("../output/fvfm_combo_plot.png", plot = fvfm, width = 10, height = 6, dpi = 600)

```

## Anova

### Day 1

```{r}
fvfm_aov_1 <- aov(FvFm ~ treatment,
  data = fvfm_day1
)

summary(fvfm_aov_1)
```

### Day 2

```{r}
fvfm_aov_2 <- aov(FvFm ~ treatment,
  data = fvfm_day2
)

summary(fvfm_aov_2)
```

### Day 3

```{r}
fvfm_aov_3 <- aov(FvFm ~ treatment,
  data = fvfm_day3
)

summary(fvfm_aov_3)
```

### Day 4

```{r}
fvfm_aov_4 <- aov(FvFm ~ treatment,
  data = fvfm_day4
)

summary(fvfm_aov_4)
```

```{r}

FvFm <- ggplot(photobot_results) +
  aes(x = treatment, y = FvFm, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Photosynthetic efficiency (Fv/Fm)",
    x = "Leachate concentration (mg/L)",
    y = "Photosynthetic efficiency (Fv/Fm)"
  ) +
  scale_x_discrete(labels = c("Control ", "PPa 0.01", "PPa 0.1","PPa 1", "PPa 10", "PPa 100","PVC 0.01", "PVC 0.1", "PVC 1", "PVC 10", "PVC 100")) +  
  scale_fill_manual(values = c("seashell", "coral", "coral1","coral2","coral3", "coral4","dodgerblue","dodgerblue1","dodgerblue2", "dodgerblue3","dodgerblue4")) 

FvFm

# Save the ggplot object to a PNG file
ggsave(filename = "FvFm.png", plot = FvFm, width = 11, height = 6, dpi = 600)

```

# Alpha

## Day 1

```{r}
Alpha_1 <- ggplot(regression_0619) +
  aes(x = treatment, y = alpha, fill= leachate) +
  geom_boxplot() +
  scale_x_discrete(limits = c("ambient_control", "hot_control", 
                              "ambient_low", "hot_low", 
                              "ambient_high", "hot_high")) +
  scale_y_continuous(breaks = pretty(regression_0619$alpha, n = 5)) + # Limit number of ticks
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Alpha values on the 1st day of exposure",
    x = "",
    y = "Alpha"
  ) 

Alpha_1

# Save the ggplot object to a PNG file
#ggsave(filename = "Alpha.png", plot = Alpha, width = 11, height = 6, dpi = 300)
```

## anova

temp

```{r}
alpha_aov <- aov(alpha ~ temp,
  data = regression_0619
)

summary(alpha_aov)
```

leachate

```{r}
alpha_aov <- aov(alpha ~ leachate,
  data = regression_0619
)

summary(alpha_aov)
```

temp\*leachate

```{r}
alpha_aov <- aov(alpha ~ temp*leachate,
  data = regression_0619
)

summary(alpha_aov)
```

### plot

```{r}
PVCAlpha <- ggplot(photobot_pvc) +
  aes(x = treatment, y = alpha, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Alpha",
    x = "Leachate concentration (mg/L)",
    y = "Alpha"
  ) +
  scale_x_discrete(labels = c("Control ", "PVC 0.01", "PVC 0.1", "PVC 1", "PVC 10", "PVC 100")) +  
  scale_fill_manual(values = c("seashell", "dodgerblue","dodgerblue1","dodgerblue2", "dodgerblue3","dodgerblue4")) 

PVCAlpha

# Save the ggplot object to a PNG file
ggsave(filename = "PVCAlpha.png", plot = PVCAlpha, width = 11, height = 6, dpi = 300)

```

Alpha (α) Definition: Alpha (α) is defined as the initial slope of the
Rapid Light Curve at low light intensities. It represents the
photosynthetic efficiency, indicating how effectively a photosynthetic
organism can use available light for photosynthesis under low light
conditions. A higher alpha value indicates that the photosynthetic
organism is highly efficient at utilizing low light levels, which can be
crucial for survival in shaded or low-light environments. Conversely, a
lower alpha suggests less efficiency in low light conditions. The alpha
value is calculated from the initial linear portion of the Rapid Light
Curve. It is determined by fitting a straight line to the data points at
the lowest light intensities and calculating the slope of this line. The
steeper the slope, the higher the photosynthetic efficiency at low
light.

### anova

```{r}
alpha_pvc_aov <- aov(alpha ~ treatment,
  data = photobot_pvc
)

summary(alpha_pvc_aov)
```

### Dunnett's test

Is the lowest PVC leachate concentration actually larger than the
control? Or is this a `Type II error`, or error of multiple tests? I
followed the [stats and r blog to conduct a post-hoc Dunnett's
test](https://statsandr.com/blog/anova-in-r/#post-hoc-test:~:text=plot(TukeyHSD(res_aov))-,Dunnett%E2%80%99s%20test,-We%20have%20seen)
on the above ANOVA result.

```{r}
if ("multcomp" %in% rownames(installed.packages()) == 'FALSE') install.packages('multcomp')
library(multcomp)

# Make sure `treatment` is a factor


# Dunnett's test:
post_test <- glht(alpha_pvc_aov,
  linfct = mcp(treatment = "Dunnett")
)

summary(post_test)
```

::: callout-warning
The Dunnett's test adjusted *p* value comparing the lowest PVC
concentration to the control (*p* = .0671) indicated that the treatment
is not significantly different from the control.
:::

::: callout-note
Note that in R, by default, the reference category for a [factor
variable](https://statsandr.com/blog/data-types-in-r/#factor) is the
first category in alphabetical order. This is the reason that, by
default, the reference species is `Control`.

The reference category can be changed with the `relevel()` function (or
with the [`{questionr}`
addin](https://statsandr.com/blog/rstudio-addins-or-how-to-make-your-coding-life-easier/#reordering-factors)).
Look
[here](https://statsandr.com/blog/anova-in-r/#post-hoc-test:~:text=%23%20Change%20reference%20category%3A)
for an example.
:::

Examining the 95% family-wise confidence level comparing the treatments
to the controls:

```{r}

# Open the PNG device
png(filename = "Dunnett.png", width = 800, height = 600, res = 72)

### use sufficiently large upper margin
old.par <- par(mai=c(1,2.25,1.25,0.25), no.readonly=TRUE)
### plot
plot(post_test)
par(old.par)

# Close the device
dev.off()

```

```{r}
### use sufficiently large upper margin
old.par <- par(mai=c(1,2.25,1.25,0.25))
### plot
plot(post_test)
par(old.par)
```

## PP only?

```{r}
photobot_pp <- photobot_results %>% 
  filter(treatment %in% c('Control', 'PP_A_0.01_mgL', 'PP_A_0.1_mgL', 'PP_A_1_mgL', 'PP_A_10_mgL', 'PP_A_100_mgL'))

photobot_pp
```

```{r}
alpha_pp_aov <- aov(alpha ~ treatment,
  data = photobot_pp
)

summary(alpha_pp_aov)
```

```{r}
ggplot(photobot_pp) +
  aes(x = treatment, y = alpha, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. Alpha",
    x = "Leachate concentration (mg/L)",
    y = "Alpha"
  ) +
  scale_x_discrete(labels = c("Control ", "PPa 0.01", "PPa 0.1","PPa 1", "PPa 10", "PPa 100")) +  
  scale_fill_manual(values = c("seashell", "coral", "coral1","coral2","coral3", "coral4"))
```

# ETRm

```{r}
etrm_aov <- aov(ETRm ~ treatment,
  data = photobot_results
)

summary(etrm_aov)
```

```{r}
ggplot(photobot_results) +
  aes(x = treatment, y = ETRm, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Concentration vs. rETRm",
    x = "Leachate concentration (mg/L)",
    y = "rETRm"
  ) +
  scale_x_discrete(labels = c("Control ", "PPa 0.01", "PPa 0.1","PPa 1", "PPa 10", "PPa 100","PVC 0.01", "PVC 0.1", "PVC 1", "PVC 10", "PVC 100")) +  
  scale_fill_manual(values = c("seashell", "coral", "coral1","coral2","coral3", "coral4","dodgerblue","dodgerblue1","dodgerblue2", "dodgerblue3","dodgerblue4"))
```

# Ik

```{r}
ik_aov <- aov(Ik ~ treatment,
  data = photobot_results
)

summary(ik_aov)
```

```{r}
Ik <- ggplot(photobot_results) +
  aes(x = treatment, y = Ik, fill= treatment) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   labs(
    title = "Leachate concentration vs. Saturating Irradiance (Ik)",
    x = "Leachate concentration (mg/L)",
    y = "Saturating Irradiance (PAR umol/m2/s)"
  ) +
  scale_x_discrete(labels = c("Control ", "PPa 0.01", "PPa 0.1","PPa 1", "PPa 10", "PPa 100","PVC 0.01", "PVC 0.1", "PVC 1", "PVC 10", "PVC 100")) +  
  scale_fill_manual(values = c("seashell", "coral", "coral1","coral2","coral3", "coral4","dodgerblue","dodgerblue1","dodgerblue2", "dodgerblue3","dodgerblue4"))

Ik

```

What the hell is wrong with the control!?
